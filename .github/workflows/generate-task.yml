name: Generate New Task from Template

on:
  issues:
    types: [opened]

jobs:
  generate-task:
    if: contains(github.event.issue.labels.*.name, 'task-generation')
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Test action trigger
        run: |
          echo "✅ GitHub Action triggered successfully!"
          echo "Issue title: ${{ github.event.issue.title }}"
          echo "Issue number: ${{ github.event.issue.number }}"
          echo "Issue labels: ${{ join(github.event.issue.labels.*.name, ', ') }}"

      - name: Comment on issue with debug info
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `
            ## � GitHub Action Debug Information
            
            ✅ **Action Successfully Triggered!**
            
            **Issue Details:**
            - **Title**: ${{ github.event.issue.title }}
            - **Number**: #${{ github.event.issue.number }}
            - **Labels**: ${{ join(github.event.issue.labels.*.name, ', ') }}
            - **Author**: @${{ github.event.issue.user.login }}
            
            **Next Steps:**
            This is a debug version of the action. The full task generation functionality will be implemented next.
            
            **Issue Body Preview (first 500 chars):**
            \`\`\`
            ${context.payload.issue.body.substring(0, 500)}
            \`\`\`
            
            ---
            *If you see this comment, the GitHub Action is working correctly!*
            `;
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Add completion label
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['action-tested']
            });